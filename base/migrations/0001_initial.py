# Generated by Django 3.1.7 on 2021-04-04 13:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Applications_status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Статус заказа')),
            ],
        ),
        migrations.CreateModel(
            name='Components',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('type_component', models.CharField(max_length=100, verbose_name='Тип компонента')),
                ('marking', models.CharField(max_length=100, unique=True, verbose_name='Маркировка')),
                ('note', models.CharField(blank=True, max_length=100, null=True, verbose_name='Примечание')),
                ('amount_eis', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Количество ЭИС')),
                ('amount_trk', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Количество ТРК')),
                ('amount_vts', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Количество ВТС')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена/шт')),
            ],
            options={
                'verbose_name': 'Компонент',
                'verbose_name_plural': 'Компоненты',
                'ordering': ['type_component'],
            },
        ),
        migrations.CreateModel(
            name='Maker_company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Record_block',
            fields=[
                ('number_block', models.IntegerField(primary_key=True, serialize=False, verbose_name='Номер блока')),
                ('serial_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Заводской_номер')),
                ('date_add', models.DateField(auto_now_add=True, verbose_name='Дата приема')),
                ('date_repair', models.DateField(blank=True, null=True, verbose_name='Дата ремонта')),
                ('date_shipment', models.DateField(blank=True, null=True, verbose_name='Дата отправки')),
                ('FIO', models.CharField(blank=True, max_length=30, null=True, verbose_name='ФИО')),
                ('status', models.CharField(choices=[('ожидает', 'ожидает'), ('готов', 'готов'), ('отправлен', 'отправлен'), ('неисправен', 'неисправен'), ('производитель', 'производитель')], default='ожидает', max_length=15, null=True, verbose_name='Состояние')),
                ('note', models.CharField(blank=True, max_length=200, null=True, verbose_name='Примечание')),
                ('passed', models.CharField(blank=True, max_length=25, null=True, verbose_name='Передан ФИО')),
            ],
            options={
                'verbose_name': 'Блок в центре',
                'verbose_name_plural': 'Блоки в центре',
                'ordering': ['-number_block'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=50, unique=True, verbose_name='Подразделение')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'ordering': ['region'],
            },
        ),
        migrations.CreateModel(
            name='Type_block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_block', models.CharField(max_length=100, unique=True, verbose_name='Наименование блока')),
                ('components', models.ManyToManyField(related_name='block_components', to='base.Components', verbose_name='Компоненты блока')),
            ],
            options={
                'verbose_name': 'Тип блока',
                'verbose_name_plural': 'Типы блоков',
                'ordering': ['name_block'],
            },
        ),
        migrations.CreateModel(
            name='Record_components',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, max_length=10, null=True, verbose_name='Компания')),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('date_add', models.DateField(auto_now_add=True, verbose_name='Дата учета')),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_block', to='base.record_block', verbose_name='Номер блока')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_component', to='base.components', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Компонент',
                'verbose_name_plural': 'Компоненты',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='record_block',
            name='name_block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_type_block', to='base.type_block', verbose_name='Тип блока'),
        ),
        migrations.AddField(
            model_name='record_block',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit', to='base.unit', verbose_name='Подразделение'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('order_date', models.DateField(auto_now_add=True, verbose_name='Дата заказа')),
                ('period', models.CharField(blank=True, max_length=15, null=True, verbose_name='Срок поставки')),
                ('status', models.CharField(choices=[('заказан', 'заказан'), ('получен', 'получен')], default='заказан', max_length=15, null=True, verbose_name='Состояние')),
                ('date_add', models.DateField(blank=True, null=True, verbose_name='Получено')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_components', to='base.components', verbose_name='Наименование компонента')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Maker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата учета')),
                ('date_shipment', models.DateField(blank=True, null=True, verbose_name='Дата отправки')),
                ('date_add', models.DateField(blank=True, null=True, verbose_name='Дата приёма')),
                ('note', models.CharField(blank=True, max_length=65, null=True, verbose_name='Примечание')),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.record_block', verbose_name='Блок')),
                ('maker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.maker_company')),
            ],
            options={
                'verbose_name': 'Ремон производителя',
                'verbose_name_plural': 'Ремонты Производителей',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Defect_statement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('date_add', models.DateField(verbose_name='Дата')),
                ('defect_1', models.CharField(max_length=100, verbose_name='Неисправность 1')),
                ('defect_2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Неисправность 2')),
                ('defect_3', models.CharField(blank=True, max_length=100, null=True, verbose_name='Неисправность 3')),
                ('result', models.CharField(max_length=100, verbose_name='Заключение')),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.record_block', verbose_name='Блок')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_statement', to='base.unit', verbose_name='Подразделение')),
            ],
            options={
                'verbose_name': 'Деектная ведомость',
                'verbose_name_plural': 'Дефектные ведомости',
                'ordering': ['block'],
            },
        ),
        migrations.CreateModel(
            name='Components_block',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_block', to='base.type_block', verbose_name='Блок')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='base.components', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Привязанные компоненты',
                'verbose_name_plural': 'Привязанный компонент',
            },
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('date_add', models.DateField(auto_now_add=True, verbose_name='Получено')),
                ('user', models.CharField(max_length=35, verbose_name='Пользователь')),
                ('note', models.CharField(blank=True, max_length=50, null=True, verbose_name='Примечание')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications_components', to='base.components', verbose_name='Наименование компонента')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='appl_status', to='base.applications_status', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ['-id'],
            },
        ),
    ]
